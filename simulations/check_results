#!/usr/bin/env python

# check the results of simulations run
# takes 0 or 1 parameter, the shot
# if shot not specified, checks all simXXX dirs in the current folder


import numpy as np
import os
import sys
import glob
from tqdm import tqdm
import traceback

PRINT_EXCEPTIONS = False

cl_args = list(map(str.lower,sys.argv))

try:
    if len(cl_args) == 2:
        shot = str((cl_args[1]))
    else:
        shot = None
except:
    shot = None


if shot is None:
    dirnames = sorted(glob.glob("sim20*s666")) #skip those that have some extra extension, like .timeout
else:
    if "v" in shot:
        dirnames = [f"sim{shot}s666"]
    else:
        dirnames = [f"sim{shot[0:8]}v{shot[8:]}s666"]


bad_dirs = []

for dn in tqdm(dirnames):
    #check HETDEX.o* file (at least last line)

    try:
        hetdex_log = sorted(glob.glob(f"{dn}/HETDEX.o*")) #may be more than one
        if len(hetdex_log) > 0:
            hetdex_log = hetdex_log[-1]

        with open(os.path.join(hetdex_log),"r") as f:
            lines = f.readlines()
            if not ("Cleaning up ..." in lines[-2] and "Removed." in lines[-1]):
                #something is wrong
                print(lines[-2])
                print(lines[-1])
                print(f"{dn} Bad {hetdex_log} file.")
                bad_dirs.append(dn)
                continue
    except:
        if PRINT_EXCEPTIONS:
            print(traceback.format_exc())
        #this is a fail
        print(f"{dn} Bad HETDEX.o* file.")
        bad_dirs.append(dn)
        continue

    #check ./output directory .find files are not zero length
    try:
        findfiles = sorted(glob.glob(os.path.join(dn,"output","*.find")))
        if len(findfiles) < 500: #depending on the shot there should be 900+ up to almost 5200
            print(f"{dn} Bad output/*.find files. Too few: {len(findfiles)}")
            bad_dirs.append(dn)
            continue

        fail = False
        for fn in findfiles: #if even one file is zero length, call it a fail
            sz = os.path.getsize(fn)
            if sz == 0:
                print(f"{dn} Bad output/*.find files. Zero size.")
                bad_dirs.append(dn)
                fail = True
                break
        if fail:
            continue

    except:
        if PRINT_EXCEPTIONS:
            print(traceback.format_exc())
        print(f"{dn} Bad output/*.find files.")
        bad_dirs.append(dn)
        continue

    #check .sim file exists and is populated
    try:
        simfile = sorted(glob.glob(os.path.join(dn,"*.sim")))
        if len(simfile) == 0:
            print(f"{dn} Missing *.sim file.")
            bad_dirs.append(dn)
            continue
        elif len(simfile) != 1:
            print(f"{dn} Too many *.sim files. {len(simfile)}")
            bad_dirs.append(dn)
            continue
        else:
            simfile = simfile[0]
            sz = os.path.getsize(simfile)
            if sz == 0:
                print(f"{dn} Zero length *.sim file.")
                bad_dirs.append(dn)
                continue
    except:
        if PRINT_EXCEPTIONS:
            print(traceback.format_exc())
        print(f"{dn} Bad *.sim file.")
        bad_dirs.append(dn)
        continue

print("\nSummary:")
print(f"Checked {len(dirnames)} sim directories")
if len(bad_dirs) == 0:
    print("0 bad found.")
else:
    print(f"{len(bad_dirs)} bad found")
    for dn in bad_dirs:
        print(dn)
